name: Full CI

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  backend-ci:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Audit dependencies
        run: npm audit --audit-level=high

      - name: Run linter
        run: npx eslint .

      - name: Run tests
        run: npm test

      - name: Build Docker image
        run: docker build -t f1-backend:ci .
  # ─────────────── iOS CI Job ───────────────
  ios-ci:
    runs-on: macos-15

    defaults:
      run:
        working-directory: frontend/Formula1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      - name: Test app
        run: |
          xcodebuild \
          -scheme Formula1 \
          -sdk iphonesimulator \
          -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.2' \
          -skip-testing:Formula1UITests \
          -enableCodeCoverage YES \
          -resultBundlePath TestResults \
          test

      - name: Archive test results
        if: always()  # always run, even if previous steps fail
        uses: actions/upload-artifact@v4
        with:
          name: Formula1TestResults
          path: frontend/Formula1/TestResults

      - name: List contents of TestResults
        run: ls -l frontend/Formula1/TestResults

      - name: Enforce 70% Code Coverage
        run: |
          BUNDLE=$(ls frontend/Formula1/TestResults/*.xcresult | head -1)
          if [ ! -f "$BUNDLE" ]; then
            echo "No xcresult bundle found at $BUNDLE"
            exit 1
          fi
          COVERAGE=$(xcrun xccov view --report --json "$BUNDLE" | \
            /usr/bin/python3 -c "import sys, json; print(int(float(json.load(sys.stdin)['lineCoverage']) * 100))")
          echo "Coverage is $COVERAGE%"
          if [ "$COVERAGE" -lt 70 ]; then
            echo "Code coverage ($COVERAGE%) is below 70%."
            exit 1
          fi

      
      # TODO: iOS Project doesn't have SPM dependencies yet.
      # - name: Cache SPM
      #   uses: actions/cache@v4
      #   with:
      #     path: ~/.swiftpm
      #     key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
      #     restore-keys: |
      #       ${{ runner.os }}-spm-


      # TODO: Not very useful for now.      
      # - name: Cache DerivedData
      #   uses: actions/cache@v4
      #   with:
      #     path: frontend/Formula1/DerivedData
      #     key: ${{ runner.os }}-deriveddata-${{ github.sha }}
      #     restore-keys: |
      #       ${{ runner.os }}-deriveddata-


      



