name: iOS CI

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'frontend/Formula1/**'
  pull_request:
    branches:
      - main
      - master
    paths:
      - 'frontend/Formula1/**'

jobs:
  ios-ci:
    runs-on: macos-15

    defaults:
      run:
        working-directory: frontend/Formula1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      - name: Install SwiftLint
        run: brew install swiftlint

      - name: Run SwiftLint
        run: swiftlint
        working-directory: frontend/Formula1

      - name: Test app
        run: |
          xcodebuild \
            -scheme Formula1 \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.2' \
            -skip-testing:Formula1UITests \
            -enableCodeCoverage YES \
            -resultBundlePath TestResults.xcresult \
            test

      - name: Archive test results
        if: always()  # always run, even if previous steps fail
        uses: actions/upload-artifact@v4
        with:
          name: Formula1TestResults
          path: frontend/Formula1/TestResults.xcresult/

      - name: List contents of TestResults
        run: ls -l TestResults.xcresult

      - name: Enforce 70% Code Coverage
        run: |
          if [ ! -e TestResults.xcresult ]; then
            echo "No xcresult bundle found at TestResults.xcresult"
            exit 1
          fi
          COVERAGE=$(xcrun xccov view --report --json TestResults.xcresult | \
            /usr/bin/python3 -c "import sys, json; print(int(float(json.load(sys.stdin)['lineCoverage']) * 100))")
          echo "Coverage is $COVERAGE%"
          if [ "$COVERAGE" -lt 70 ]; then
            echo "Code coverage ($COVERAGE%) is below 70%."
            exit 1
          fi
