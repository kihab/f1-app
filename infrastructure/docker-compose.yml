
services:
  db:  # PostgreSQL database
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "f1user", "-d", "f1db"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:  # Redis cache
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:  # Run DB migrations before anything else
    build: ../backend
    command: ["npx", "prisma", "migrate", "deploy"]
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public
    depends_on:
      db:
        condition: service_healthy

  seed:  # One-off service to seed DB and Redis before FE calls
    build: ../backend
    command: ["node", "scripts/seedSeasons.js"]   
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_healthy

  backend:  # Node.js backend
    build: ../backend
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
      seed:
        condition: service_completed_successfully
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"

  pgadmin:  # PostgreSQL web admin GUI
    image: dpage/pgadmin4:8.6
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}      # Email for pgAdmin login
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}     # Password for pgAdmin login
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - db
    volumes:
      - pgadmin-data:/var/lib/pgadmin

volumes:
  db-data:
  redis-data:
  pgadmin-data:
